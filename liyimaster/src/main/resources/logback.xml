<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="ture">
	<property name="APP_Name" value="liyimaster"/> 
	<contextName>${APP_Name}</contextName>
	<!--    日志路径 -->
	<property name="LOG_PATH" value=" E:/log" />
	<!--    项目路径 -->
	<property name="APPDIR_EOOR" value="liyiMaster/ERROR" />
	<property name="APPDIR_DEBUG" value="liyiMaster/DEBUG" />
	<!-- 保存ERROR日志文件   -->
	<appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">  
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_PATH}/${APPDIR_EOOR}/log-error.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
			<!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
				而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
			<fileNamePattern>${LOG_PATH}/${APPDIR_EOOR}/error/log-error-%d.log%i.log</fileNamePattern>  
			<!-- 日志最大的历史 120天数 会自动删除之前的文件 -->  
			<maxHistory>120</maxHistory>
			<!-- 
				除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
						命名日志文件，例如log-error-2013-12-21.0.log 如果要使用maxFileSize必须要文件名设置时必须要指定索引.%i--> 
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
				<maxFileSize>2MB</maxFileSize>  
			</timeBasedFileNamingAndTriggeringPolicy>  
				
		</rollingPolicy>  
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 此日志文件只记录error级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>error</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- 保存DEBUG日志文件   -->
	<appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">  
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${LOG_PATH}/${APPDIR_DEBUG}/log-debug.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
			<!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
				而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
			<fileNamePattern>${LOG_PATH}/${APPDIR_DEBUG}/debug/log-debug-%d.log%i.log</fileNamePattern>  
			<!-- 日志最大的历史 120天数 会自动删除之前的文件 -->  
			<maxHistory>120</maxHistory>
			<!-- 
				除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，
						命名日志文件，例如log-error-2013-12-21.0.log 如果要使用maxFileSize必须要文件名设置时必须要指定索引.%i--> 
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
				<maxFileSize>2MB</maxFileSize>  
			</timeBasedFileNamingAndTriggeringPolicy>  
				
		</rollingPolicy>  
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 此日志文件只记录error级别的 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>debug</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<!-- 控制台打印 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>
  
	<logger name="com.liyimaster" level="TRACE" additivity="false">  		
		<appender-ref ref="DEBUG" />
		<appender-ref ref="ERROR" />
		<appender-ref ref="STDOUT" />        
	</logger>
	
	<!--控制台打印资源加载信息 等级从trace开始 TRACE < DEBUG < INFO < WARN < ERROR-->  
	<!--<root level="DEBUG">   
			<appender-ref ref="ERROR"/> 
		</root>  -->
	
</configuration>